trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  imageName: 'Test'
  dockerfilePath: './proiectING/Dockerfile'

stages:
- stage: BuildandPush
  jobs:
  - job: BuildandPush
    displayName: BuildandPush Docker Image
    steps:
    - task: Docker@2
      displayName: BuildandPush Docker image
      inputs:
        command: buildAndPush
        dockerfile: $(dockerfilePath)
        containerRegistry: testAcrMara
        repository: proiectING
        tags: latest

- stage: Curl
  jobs:
  - job: SendReq
    displayName: Send request
    steps:
    - bash: |
        if [ $(curl -LI flask-app.f5fggqh3dwfde9bs.westeurope.azurecontainer.io -o /dev/null -w '%{http_code}\n' -s) != "200" ]; then exit 1; fi
      displayName: Test curl request

# - stage: CreateContainer
#   jobs:
#   - job: Create
#     displayName: Create Container
#     steps:
#     - task: AzureKeyVault@2
#       inputs:
#         azureSubscription: 'Azure subscription 1 (a5577d92-76d9-4305-8401-ee12f06e173b)'
#         KeyVaultName: 'testKeyVault45'
#         SecretsFilter: '*'
#         RunAsPreJob: false
#     - task: AzureCLI@2
#       inputs:
#         azureSubscription: 'Azure subscription 1 (a5577d92-76d9-4305-8401-ee12f06e173b)'
#         scriptType: 'pscore'
#         scriptLocation: 'inlineScript'
#         inlineScript: az container create -g resource-test --name test --image testarcm.azurecr.io/proiectING:latest --cpu 1 --memory 1 --registry-login-server testacrmara.azurecr.io --registry-username $(User) --registry-password $(Password) --ports 5000

